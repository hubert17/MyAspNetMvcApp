@model MyAspNetMvcApp.Areas.OrderFramework.ViewModels.ShoppingCartViewModel
@{
    ViewBag.Title = "Shopping Cart";
}

@section Head {
    <style>
        input, select, textarea {
            max-width: 60px;
        }

        .input-xs {
            height: 22px !important;
            padding: 2px 5px;
            font-size: 12px;
            line-height: 1.5;
            border-radius: 3px;
        }
        .input-group-xs {
            max-width: 100px;
        } 
        .input-group-xs > .form-control,
        .input-group-xs > .input-group-addon,
        .input-group-xs > .input-group-btn > .btn {
            height: 20px;
            padding: 1px 5px;
            font-size: 12px;
            line-height: 1.5;
        }

        .number-spinner {
            display: none;
        }
        tr:hover .number-spinner {
            display: table;
        }
        tr:hover .number-static {
            display: none;
        }
        #tbl-cart > tbody > tr > td:nth-child(3) {
            width: 110px;
            text-align: center;
        }
    </style>
}

<h3>
    <em>Review</em> your order:
</h3>
@{

    if (Model.CartItems.Count > 0)
    {
        <div class="panel panel-info">
            <div class="panel-heading">
                <h3 class="panel-title">Order Summary</h3>
            </div>
            <div class="panel-body">
                <div id="update-message">
                </div>
                <table class="table table-striped table-hover" id="tbl-cart">
                    <thead>
                        <tr>
                            <th>
                                Item Name
                            </th>
                            <th>
                                Price (each)
                            </th>
                            <th class="td-qty">
                                Quantity
                            </th>
                            <th></th>
                        </tr>
                    </thead>
                    @foreach (var item in Model.CartItems)
                    {
                        <tr data-id="@item.ItemId">
                            <td>
                                @Html.ActionLink(item.Item.Name, "Details", "Products", new { id = item.Item.Id, area = "OrderFramework" }, null)
                            </td>
                            <td>
                                @string.Format("{0:C}", item.Item.UnitPrice)
                            </td>
                            <td>
                                <span class="number-static">@item.Quantity</span>
                                <div class="input-group input-group-xs number-spinner">
                                    <span class="input-group-btn data-dwn">
                                        <button class="btn btn-info" data-dir="dwn">
                                            <i class="glyphicon glyphicon-minus"></i>
                                        </button>
                                    </span>
                                    <input type="text" class="form-control text-center" value="@item.Quantity" min="1" max="9999" readonly />
                                    <span class="input-group-btn data-up">
                                        <button class="btn btn-info" data-dir="up">
                                            <i class="glyphicon glyphicon-plus"></i>
                                        </button>
                                    </span>
                                </div>                            
                            </td>
                            <td>
                                <a href="#">
                                    <span class="glyphicon glyphicon-trash"></span>
                                </a>
                            </td>
                        </tr>
                    }
                    <tr class="info">
                        <td>
                            Total
                        </td>
                        <td></td>
                        <td></td>
                        <td id="cart-total">
                            @string.Format("{0:C}", Model.CartTotal)
                        </td>
                    </tr>
                </table>
                <button type="button" class="btn btn-success btn-sm" onclick="location.href='@Url.Action("AddressAndPayment", "Checkout")'">
                    Check Out &raquo;
                </button>
            </div>
        </div>
    }
    else
    {
        <div>
            <p>
                There are no items in your cart currently. Please <a href="@Url.Action("Index","Products",new { area = "OrderFramework" })">shop</a> for something and add items..
            </p>
        </div>
    }
}


@section Scripts {
        <script type="text/javascript">
        $(function () {
            // Document.ready -> link up remove event handler
            $("td:nth-child(4) > a").click(function () {
                var thisRow = $(this).parent().parent();
                // Get the id from the link
                var recordToDelete = thisRow.attr("data-id"); //$(this).attr("data-id");
                if (recordToDelete != '') {
                    // Perform the ajax post
                    $.post('@Url.Action("RemoveFromCart", "ShoppingCart", new { area = "OrderFramework" })', { "id": recordToDelete },
                        function (data) {
                            // Successful requests get here
                            // Update the page elements
                            if (data.ItemQty == 0) {
                                thisRow.fadeOut('slow');
                            } else {
                                thisRow.find('td:nth-child(3) > span.number-static').text(data.ItemQty);
                                thisRow.find('td:nth-child(3) > .number-spinner > input').val(data.ItemQty);
                            }
                            $('#cart-total').text(data.CartTotalFormatted);
                            $('#update-message').text('One (1) ' + data.ItemName + ' has been removed from your shopping cart.');
                            if (data.CartCount > 0) {
                                $('.cart-status').text(data.CartCount);
                            } else {
                                location.reload();
                            }
                        });
                }
            });
        });

        $(function () {
            var action;
            $(".number-spinner button").click(function () {
                btn = $(this);
                input = btn.closest('.number-spinner').find('input');
                tdInput = input.parent().parent().find('span.number-static');
                btn.closest('.number-spinner').find('button').prop("disabled", false);

                var newQty = 0;
                if (btn.attr('data-dir') == 'up') {
                    if (input.attr('max') === undefined || parseInt(input.val()) < parseInt(input.attr('max'))) {
                        newQty = parseInt(input.val()) + 1;
                    } else {
                        btn.prop("disabled", true);
                    }
                } else {
                    if (input.attr('min') === undefined || parseInt(input.val()) > parseInt(input.attr('min'))) {
                        newQty = parseInt(input.val()) - 1;
                    } else {
                        btn.prop("disabled", true);
                    }
                }

                var recordToUpdateQty = btn.parent().parent().parent().parent().attr("data-id");
                if (recordToUpdateQty != '' && newQty > 0) {
                    // Perform the ajax post
                    $.post('@Url.Action("UpdateQtyFromCart", "ShoppingCart", new { area = "OrderFramework" })', { "id": recordToUpdateQty, "newQty": newQty },
                        function (data) {
                            // Successful requests get here
                            // Update the page elements
                            input.val(data.ItemQty);
                            tdInput.text(data.ItemQty);
                            $('#cart-total').text(data.CartTotalFormatted);
                        });
                }
            });
        });
        </script>

}